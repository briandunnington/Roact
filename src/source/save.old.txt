' OLD STUFF - SAVE FOR NOW

' sub RoactUpdateProps(el, oldProps, newProps)
'     combined = {}
'     combined.append(oldProps)
'     combined.append(newProps)
'     for each prop in combined
'         RoactUpdateProp(el, prop, oldProps[prop], newProps[prop])
'     end for
' end sub

' sub RoactUpdateProp(el, propName, oldValue, newValue)
'     if newValue <> oldValue        ' there is no good way to do a value check for non-primitive types (ex: arrays)
'         el.setField(propName, newValue)
'     else
'         ?"unchanged prop:", propName, oldValue
'     end if
' end sub


' sub printit(a, b, u)
'     spaces = "                                                                                                    "
'     pad = spaces.left(u * 4)
'     ?Substitute("{0}{1}: {2}", pad, a), b
' end sub

' function RoactCreateElement(vNode, u=0)
' t = CreateObject("roTimespan")
' printit("---------------------------------", invalid, u)
'     if vNode = invalid then return invalid
' printit("a", t.totalmilliseconds(), u)
'     if m.mounting = invalid then m.mounting = []
' printit("b", t.totalmilliseconds(), u)
' printit(vNode.type, invalid, u)
'     '?"CREATED NODE:", vNode.type
'     el = CreateObject("roSGNode", vNode.type)
' printit("c", t.totalmilliseconds(), u)
'     if el.roact <> invalid 'el.hasField("roact")
' printit("d", t.totalmilliseconds(), u)
'         m.mounting.push(el)
' printit("e", t.totalmilliseconds(), u)
' '         if vNode.props.id <> invalid then el.id = vNode.props.id
' ' ?"f", t.totalmilliseconds()
' '         el.props = vNode.props
' ' ?"g", t.totalmilliseconds()
' '         el.children = vNode.children
' el.setFields({
'     id: vNode.props.id
'     props: vNode.props
'     children: vNode.children
' })
' printit("h", t.totalmilliseconds(), u)
' yy = el.callFunc("conditionalRender", invalid)
' printit("hh", t.totalmilliseconds(), u)
'         child = RoactCreateElement(yy, u+1)
' printit("i", t.totalmilliseconds(), u)
'         if child <> invalid then el.appendChild(child)
' printit("j", t.totalmilliseconds(), u)
'     else
' printit("d0", t.totalmilliseconds(), u)
'         if vNode.props.count() > 0 then el.setFields(vNode.props)
' printit("d1", t.totalmilliseconds(), u)
'         for i=0 to vNode.children.count() - 1
'             child = RoactCreateElement(vNode.children[i], u+1)
' printit("e1", t.totalmilliseconds(), u)
'             if child <> invalid then el.appendChild(child)
' printit("f1", t.totalmilliseconds(), u)
'         end for
'     end if
' printit("x", t.totalmilliseconds(), u)
'     return el
' end function
